angular.module("ngSecured",["ui.router"]).run(["ngSecured",function(){}]),angular.module("ngSecured").directive("asRole",["ngSecured","$animate",function(a,b){return{transclude:"element",priority:600,terminal:!0,restrict:"A",$$tlb:!0,link:function(c,d,e,f,g){function h(a){var b=a[0],c=a[a.length-1];if(b===c)return angular.element(b);var d=b,e=[d];do{if(d=d.nextSibling,!d)break;e.push(d)}while(d!==c);return angular.element(e)}function i(){a.includesRole(l)?k||(k=c.$new(),g(k,function(a){a[a.length++]=document.createComment(" end asRole: "+e.asRole+" "),j={clone:a},b.enter(a,d.parent(),d)})):(j&&(b.leave(h(j.clone)),j=null),k&&(k.$destroy(),k=null))}var j,k,l;c.$watch(function(){return e.asRole},function(a){l=a,i()}),c.$watch(function(){return a.getRoles()},i)}}}]),angular.module("ngSecured").provider("ngSecured",["$stateProvider",function(a){var b="private__ngSecured",c={BASE_STATE:b,NOT_AUTHENTICATED:b+".notAuthenticated",NOT_AUTHORIZED:b+".notAuthorized"},d={loginState:c.NOT_AUTHENTICATED,unAuthorizedState:c.NOT_AUTHORIZED,isAuthenticated:function(){return!1},postLoginState:c.NOT_AUTHENTICATED};a.state(c.BASE_STATE,{}),a.state(c.NOT_AUTHENTICATED,{views:{"@":{template:"please login to see this page."}}}),a.state(c.NOT_AUTHORIZED,{views:{"@":{template:"You are not authorized to see this page."}}}),this.secure=function(a){angular.extend(d,a)},this.$get=["$rootScope","$state","$q","$injector",function(a,b,e,f){function g(){j=d.postLoginState}function h(){j&&b.go(j,k)}function i(){return f.invoke(d.isAuthenticated)}var j,k,l;return g(),a.$on("$stateChangeStart",function(a,c,e){c.secured&&(i()?c.secured.hasOwnProperty("role")&&(!l||l.indexOf(c.secured.role))&&(a.preventDefault(),b.go(d.unAuthorizedState)):(a.preventDefault(),j=c.name,k=e,b.go(d.loginState)))}),{defaultStateNames:c,_initVars:g,login:function(a){if(d.login){var b=f.invoke(d.login,d,{credentials:a});if(b){var c=this;return e.when(b).then(function(a){return a&&c.setRoles(a),h(),a})}return h(),e.reject("No promise was returned from login")}throw new Error("login function must be configured")},isAuthenticated:i,setRoles:function(a){if(angular.isString(a))l=[a];else{if(!angular.isArray(a))throw new Error("roles must be a String or an Array");l=a}},getRoles:function(){return l},includesRole:function(a){return l&&-1!==l.indexOf(a)?!0:!1}}}]}]);